version: '3.8'

services:
  mongodb:
    image: mongo
    container_name: mongodb_new
    ports:
      - "27017:27017"  # Maps MongoDB port to the host for local access
    environment:
      - MONGO_URI
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh mongodb://localhost:27017 --quiet | grep 1 || exit 1
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - my_network  # Connects MongoDB to the custom network
  
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672" # RabbitMQ port za komunikacijo
      - "15672:15672" # Management UI
    environment:
      - RABBITMQ_HOST
      - RABBITMQ_PORT
      - RABBITMQ_USER
      - RABBITMQ_PASS
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - my_network

  api-gateway:
    image: nginx:latest
    container_name: api-gateway
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro  # Mount NGINX configuration
    ports:
      - "80:80"  # Expose port 80 for the gateway
    depends_on:
      - user-service
      - savings-goal-service
      - investment-service
      - transaction-service
      - budget-service
      - debt-tracking-service
    networks:
      - my_network

  user-service:
    build:
      context: user-service
    container_name: user-service
    ports:
      - "8080:8080"
    environment:
      - MONGO_URI
      - MONGO_URL
      - DATABASE_NAME
      - JWT_SECRET
      - REFRESH_TOKEN_SECRET
    depends_on:
      mongodb:
        condition: service_healthy  # Počakaj na MongoDB, da je zdrav
    healthcheck:
      test: ["CMD", "sh", "-c", "curl -f http://localhost:8080/users/health && curl -f http://localhost:8080/auth/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    networks:
      - my_network
  
  savings-goal-service:
    build:
      context: savings-goal-service
    container_name: savings-goal
    ports:
      - "8084:8084"
    environment:
      - MONGO_URI
      - MONGO_URL
      - DATABASE_NAME
      - JWT_SECRET
      - REFRESH_TOKEN_SECRET
    depends_on:
      mongodb:
        condition: service_healthy  # Pocakaj, da je MongoDB pripravljen
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8084/savings-goals/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s  # Pocakaj malo, preden začne health check
    networks:
      - my_network
  
  investment-service:
    build:
      context: investment-service
    container_name: investment-service
    ports:
      - "8085:8085"
    environment:
      - MONGO_URI
      - MONGO_URL
      - DATABASE_NAME
      - JWT_SECRET
      - REFRESH_TOKEN_SECRET
      - API_KEY
      - API_URL
      - RABBITMQ_HOST
      - RABBITMQ_PORT
      - RABBITMQ_USER
      - RABBITMQ_PASS
    depends_on:
      mongodb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8085/investments/health"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - my_network

  transaction-service:
    build:
      context: ./transaction-service
    container_name: transaction-service
    ports:
      - "8081:8081"
    environment:
      - MONGO_URI
      - MONGO_URL
      - DATABASE_NAME
      - JWT_SECRET
      - REFRESH_TOKEN_SECRET
      - RABBITMQ_HOST
      - RABBITMQ_PORT
      - RABBITMQ_USER
      - RABBITMQ_PASS
    depends_on:
      mongodb:
        condition: service_healthy  # Počakaj na MongoDB
      rabbitmq:
        condition: service_healthy  # Počakaj na RabbitMQ
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/transactions/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s  # Počaka, preden začne health check
    networks:
      - my_network

  budget-service:
    build:
      context: budget-service
    container_name: budget-service
    ports:
      - "8083:8083"
    environment:
      - MONGO_URI
      - MONGO_URL
      - DATABASE_NAME
      - JWT_SECRET
      - REFRESH_TOKEN_SECRET
    depends_on:
      mongodb:
        condition: service_healthy  # Pocakaj na MongoDB, da je zdrav
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/budget/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s  # Počaka, preden začne health check
    networks:
      - my_network

  debt-tracking-service:
    build:
      context: debt-tracking-service
    container_name: debt-tracking-service
    ports:
      - "8086:8086"
    environment:
      - MONGO_URI
      - MONGO_URL
      - DATABASE_NAME
      - JWT_SECRET
      - REFRESH_TOKEN_SECRET
    depends_on:
      mongodb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8086/debts/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    networks:
      - my_network

networks:
  my_network:
    driver: bridge

volumes:
  mongo_data:
