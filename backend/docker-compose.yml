version: '3.8'

services:
  mongodb:
    image: mongo
    container_name: mongodb_new
    ports:
      - "27017:27017"  # Maps MongoDB port to the host for local access
    environment:
      - MONGO_URI
    volumes:
      - mongo_data:/data/db
    networks:
      - my_network  # Connects MongoDB to the custom network
  
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672" # RabbitMQ port za komunikacijo
      - "15672:15672" # Management UI
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
    - my_network

  api-gateway:
    image: nginx:latest
    container_name: api-gateway
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro  # Mount NGINX configuration
    ports:
      - "80:80"  # Expose port 80 for the gateway
    depends_on:
      - user-service
      - savings-goal-service
      - investment-service
      - transaction-service
      - budget-service
      - debt-tracking-service
    networks:
      - my_network

  user-service:
    build:
      context: user-service  # Path to your microservice's Dockerfile
    container_name: user-service
    ports:
      - "8080:8080"  # Maps your microservice port to the host
    environment:
      - MONGO_URI
      - JWT_SECRET
      - REFRESH_TOKEN_SECRET
    depends_on:
      - mongodb  # Ensures MongoDB starts before the microservice
      - rabbitmq
    networks:
      - my_network  # Connects the microservice to the custom network
  
  savings-goal-service:
    build:
      context: savings-goal-service  # Path to your microservice's Dockerfile
    container_name: savings-goal
    ports:
      - "8084:8084"  # Maps your microservice port to the host
    environment:
      - MONGO_URI
      - JWT_SECRET
      - REFRESH_TOKEN_SECRET
    depends_on:
      - mongodb  # Ensures MongoDB starts before the microservice
    networks:
      - my_network  # Connects the microservice to the custom network
  
  investment-service:
    build:
      context: investment-service
    container_name: investment-service
    ports:
      - "8085:8085"
    environment:
      - MONGO_URI
      - JWT_SECRET
      - REFRESH_TOKEN_SECRET
      - API_KEY
      - API_URL
    depends_on:
      - mongodb
    networks:
      - my_network

  transaction-service:
    build:
      context: ./transaction-service
    container_name: transaction-service
    ports:
      - "8081:8081"
    environment:
      - MONGO_URI
      - JWT_SECRET
      - REFRESH_TOKEN_SECRET
    depends_on:
      - mongodb
      - rabbitmq
    networks:
      - my_network

  budget-service:
    build:
      context: budget-service
    container_name: budget-service
    ports:
      - "8083:8083"
    environment:
      - MONGO_URI
      - JWT_SECRET
      - REFRESH_TOKEN_SECRET
    depends_on:
      - mongodb
    networks:
      - my_network

  debt-tracking-service:
    build:
      context: debt-tracking-service
    container_name: debt-tracking-service
    ports:
      - "8086:8086"
    environment:
      - MONGO_URI
      - JWT_SECRET
      - REFRESH_TOKEN_SECRET
    depends_on:
      - mongodb
    networks:
      - my_network

networks:
  my_network:
    driver: bridge

volumes:
  mongo_data:
