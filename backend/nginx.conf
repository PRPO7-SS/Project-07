worker_processes 1;

events {
    worker_connections 1024;
}

http {

    map $http_origin $allowed_origin {
        default '';
        'http://localhost:4200' 'http://localhost:4200';
        'https://financebro.app' 'https://financebro.app';
    }

    upstream user_service {
        server user-service:8080;
    }
    upstream savings_service {
        server savings-goal-service:8084;
    }
    upstream investment_service {
        server investment-service:8085;
    }
    upstream transaction_service {
        server transaction-service:8081;
    }
    upstream debts_service {
        server debt-tracking-service:8086;
    }
    upstream budget_service {
        server budget-service:8083;
    }

    server {
        listen 80;

       location /auth {
           add_header Access-Control-Allow-Origin $allowed_origin always;
           add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS' always;
           add_header Access-Control-Allow-Headers 'Authorization, Content-Type, X-Requested-With, Cookie' always;
           add_header Access-Control-Allow-Credentials 'true' always;

           # Handle preflight (OPTIONS) requests
           if ($request_method = OPTIONS) {
               add_header Access-Control-Allow-Origin $allowed_origin always;
               add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS' always;
               add_header Access-Control-Allow-Headers 'Authorization, Content-Type, X-Requested-With, Cookie' always;
               add_header Access-Control-Allow-Credentials 'true' always;
               add_header Content-Length 0;
               add_header Content-Type text/plain;
               return 204;
           }
           proxy_pass http://user_service;
           proxy_set_header Host $host;
           proxy_set_header X-Real-IP $remote_addr;
           proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
           proxy_pass_header Set-Cookie;

       }

        location /users {
            add_header Access-Control-Allow-Origin $allowed_origin always;
             add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS' always;
             add_header Access-Control-Allow-Headers 'Authorization, Content-Type, X-Requested-With, Cookie' always;
             add_header Access-Control-Allow-Credentials 'true' always;

             # Handle preflight (OPTIONS) requests
             if ($request_method = OPTIONS) {
                 add_header Access-Control-Allow-Origin $allowed_origin always;
                 add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS' always;
                 add_header Access-Control-Allow-Headers 'Authorization, Content-Type, X-Requested-With, Cookie' always;
                 add_header Access-Control-Allow-Credentials 'true' always;
                 add_header Content-Length 0;
                 add_header Content-Type text/plain;
                 return 204;
             }
            proxy_pass http://user_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass_header Set-Cookie;


        }

        location /savings-goals {
           add_header Access-Control-Allow-Origin $allowed_origin always;
              add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS' always;
              add_header Access-Control-Allow-Headers 'Authorization, Content-Type, X-Requested-With, Cookie' always;
              add_header Access-Control-Allow-Credentials 'true' always;

              # Handle preflight (OPTIONS) requests
              if ($request_method = OPTIONS) {
                  add_header Access-Control-Allow-Origin $allowed_origin always;
                  add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS' always;
                  add_header Access-Control-Allow-Headers 'Authorization, Content-Type, X-Requested-With, Cookie' always;
                  add_header Access-Control-Allow-Credentials 'true' always;
                  add_header Content-Length 0;
                  add_header Content-Type text/plain;
                  return 204;
              }
            proxy_pass http://savings_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass_header Set-Cookie;


        }
        location /investments {
           add_header Access-Control-Allow-Origin $allowed_origin always;
          add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS' always;
          add_header Access-Control-Allow-Headers 'Authorization, Content-Type, X-Requested-With, Cookie' always;
          add_header Access-Control-Allow-Credentials 'true' always;

          # Handle preflight (OPTIONS) requests
          if ($request_method = OPTIONS) {
              add_header Access-Control-Allow-Origin $allowed_origin always;
              add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS' always;
              add_header Access-Control-Allow-Headers 'Authorization, Content-Type, X-Requested-With, Cookie' always;
              add_header Access-Control-Allow-Credentials 'true' always;
              add_header Content-Length 0;
              add_header Content-Type text/plain;
              return 204;
          }
            proxy_pass http://investment_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass_header Set-Cookie;
        }
        location /transactions {
           add_header Access-Control-Allow-Origin $allowed_origin always;
          add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS' always;
          add_header Access-Control-Allow-Headers 'Authorization, Content-Type, X-Requested-With, Cookie' always;
          add_header Access-Control-Allow-Credentials 'true' always;

          # Handle preflight (OPTIONS) requests
          if ($request_method = OPTIONS) {
              add_header Access-Control-Allow-Origin $allowed_origin always;
              add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS' always;
              add_header Access-Control-Allow-Headers 'Authorization, Content-Type, X-Requested-With, Cookie' always;
              add_header Access-Control-Allow-Credentials 'true' always;
              add_header Content-Length 0;
              add_header Content-Type text/plain;
              return 204;
          }
            proxy_pass http://transaction_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass_header Set-Cookie;


        }

        location /debts {
           add_header Access-Control-Allow-Origin $allowed_origin always;
           add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS' always;
           add_header Access-Control-Allow-Headers 'Authorization, Content-Type, X-Requested-With, Cookie' always;
           add_header Access-Control-Allow-Credentials 'true' always;

           # Handle preflight (OPTIONS) requests
           if ($request_method = OPTIONS) {
               add_header Access-Control-Allow-Origin $allowed_origin always;
               add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS' always;
               add_header Access-Control-Allow-Headers 'Authorization, Content-Type, X-Requested-With, Cookie' always;
               add_header Access-Control-Allow-Credentials 'true' always;
               add_header Content-Length 0;
               add_header Content-Type text/plain;
               return 204;
           }
           proxy_pass http://debts_service;
           proxy_set_header Host $host;
           proxy_set_header X-Real-IP $remote_addr;
           proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
           proxy_pass_header Set-Cookie;

       }

       location /budget {
          add_header Access-Control-Allow-Origin $allowed_origin always;
          add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS' always;
          add_header Access-Control-Allow-Headers 'Authorization, Content-Type, X-Requested-With, Cookie' always;
          add_header Access-Control-Allow-Credentials 'true' always;

          # Handle preflight (OPTIONS) requests
          if ($request_method = OPTIONS) {
              add_header Access-Control-Allow-Origin $allowed_origin always;
              add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS' always;
              add_header Access-Control-Allow-Headers 'Authorization, Content-Type, X-Requested-With, Cookie' always;
              add_header Access-Control-Allow-Credentials 'true' always;
              add_header Content-Length 0;
              add_header Content-Type text/plain;
              return 204;
          }
          proxy_pass http://budget_service;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_pass_header Set-Cookie;

      }
    }
}
