name: CI/CD for FinanceBro

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build_deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Set up Docker
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      # 3. Log in to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 4. Build and install backend parent POM
      - name: Build and install backend parent POM
        run: |
          cd backend
          mvn clean install -N -DskipTests
          cd ..

      # 5. Build common library
      - name: Build common library
        run: |
          cd backend/common
          mvn clean install -DskipTests
          cd ../..

      # 6. Build Java services with Maven
      - name: Build Java services
        run: |
          cd backend/budget-service && mvn clean package -DskipTests && cd ../..
          cd backend/transaction-service && mvn clean package -DskipTests && cd ../..
          cd backend/debt-tracking-service && mvn clean package -DskipTests && cd ../..
          cd backend/savings-goal-service && mvn clean package -DskipTests && cd ../..
          cd backend/user-service && mvn clean package -DskipTests && cd ../..
          cd backend/investment-service && mvn clean package -DskipTests && cd ../..

      # 7. Verify Docker Compose installation
      - name: Verify Docker Compose
        run: docker compose version

      # 8. Build and Push Docker Images
      - name: Build and Push Docker Images
        run: |
          docker compose -f backend/docker-compose.yml build
          docker compose -f backend/docker-compose.yml push

      # 9. Configure kubectl
      - name: Configure kubectl
        run: |
          echo "${{ secrets.KUBECONFIG }}" > kubeconfig
          export KUBECONFIG=kubeconfig
          kubectl config use-context docker-desktop

      # 10. Test Kubernetes API
      - name: Test Kubernetes API
        run: |
          kubectl cluster-info
          kubectl get nodes

      # 11. Apply Kubernetes manifests
      - name: Apply Kubernetes manifests
        run: |
          kubectl apply -f k8s/ --validate=false